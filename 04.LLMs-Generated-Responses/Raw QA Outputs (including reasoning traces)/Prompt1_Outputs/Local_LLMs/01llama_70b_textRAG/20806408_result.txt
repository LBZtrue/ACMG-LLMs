总时间（秒）：20505.90
问答时间（秒）：105.20

```python
import json
import re
from collections import namedtuple

# Define named tuple for variants
Variant = namedtuple('Variant', 'gene ref alt pos')

# Define function to extract variants from paper text
def extract_variants(text):
    variants = []
    for match in re.finditer(
        r'(?P<gene>\w+) (?P<pos>\d+) (?P<ref>\w)>(?P<alt>\w)',
        text
    ):
        variants.append(Variant(**match.groupdict()))
    return variants

# Define function to evaluate functional evidence strength
def evaluate_functional_evidence(variant, paper_text):
    # Extract relevant information from paper text
    functional_evidence = {
        'aim': '',  # Pathogenic or Benign
        'assessment_steps': [],
        'final_evidence_strength': {},
        'overall_conclusion': ''
    }
    
    # Step 1: Define disease mechanism
    disease_mechanism = re.search(
        r'The disease mechanism is (.+?)\. This assay aims to show (.+?)\.',
        paper_text
    )
    if disease_mechanism:
        functional_evidence['aim'] = disease_mechanism.group(2)
    else:
        functional_evidence['aim'] = 'Unknown'
        
    # Step 2: Evaluate applicability of general classes of assay used in the field
    applicability = re.search(
        r'This assay uses a (.+?) assay, which is commonly used to assess (.+?)\.',
        paper_text
    )
    if applicability:
        functional_evidence['assessment_steps'].append({
            'step_name': 'Step 2: Evaluate applicability of general classes of assay used in the field',
            'extracted_paper_info': applicability.group(1),
            'judgment': 'Yes',
            'reasoning': 'The assay type matches the intended application.',
            'next_step_or_outcome': 'Proceed to Step 3'
        })
    else:
        functional_evidence['assessment_steps'].append({
            'step_name': 'Step 2: Evaluate applicability of general classes of assay used in the field',
            'extracted_paper_info': 'Not found',
            'judgment': 'No',
            'reasoning': 'The assay type does not match the intended application.'
        })
    
    # Step 3: Evaluate validity of specific instances of assays
    controls_replicates = re.search(
        r'Basic controls and replicates were included in the experiment\.',
        paper_text
    )
    if controls_replicates:
        functional_evidence['assessment_steps'].append({
            'step_name': 'Step 3: Evaluate validity of specific instances of assay',
            'extracted_paper_info': 'Basic controls and replicates were included.',
            'judgment': 'Yes',
            'reasoning': 'Basic controls and replicates were present.',
            'next_step_or_outcome': 'Proceed to Sub-step 3c'
        })
    else:
        functional_evidence['assessment_steps'].append({
            'step_name': 'Step 3: Evaluate validity of specific instances of assay',
            'extracted_paper_info': 'Basic controls and replicates were not mentioned.',
            'judgment': 'No',
            'reasoning': 'Basic controls and replicates were not present.',
            'next_step_or_outcome': 'Proceed to Sub-step 3b'
        })
        
    accepted_validated_assay = re.search(
        r'This assay has been broadly accepted or previously validated in other studies\.',
        paper_text
    )
    if accepted_validated_assay:
        functional_evidence['assessment_steps'].append({
            'step_name': 'Step 3: Evaluate validity of specific instances of assay',
            'extracted_paper_info': 'Accepted/validated assay',
            'judgment': 'Yes',
            'reasoning': 'The assay has been broadly accepted or previously validated.',
            'next_step_or_outcome': 'The functional evidence strength is Max PS3_supporting / Max BS3_supporting'
        })
    else:
        functional_evidence['assessment_steps'].append({
            'step_name': 'Step 3: Evaluate validity of specific instances of assay',
            'extracted_paper_info': 'Not found',
            'judgment': 'No',
            'reasoning': 'The assay was not broadly accepted or previously validated.',
            'next_step_or_outcome': 'Do not use PS3/BS3'
        })
        
    variant_controls = re.search(
        r'Variant controls were used in the assay\.',
        paper_text
    )
    if variant_controls:
        functional_evidence['assessment_steps'].append({
            'step_name': 'Step 3: Evaluate validity of specific instances of assay',
            'extracted_paper_info': 'Variant controls were used.',
            'judgment': 'Yes',
            'reasoning': 'Variant controls were present.',
            'next_step_or_outcome': 'Proceed to Step 4'
        })
    else:
        functional_evidence['assessment_steps'].append({
            'step_name': 'Step 3: Evaluate validity of specific instances of assay',
            'extracted_paper_info': 'Variant controls were not mentioned.',
            'judgment': 'No',
            'reasoning': 'Variant controls were not present.',
            'next_step_or_outcome': 'The functional evidence strength is Max PS3_supporting / Max BS3_supporting'
        })
        
    # Step 4: Apply evidence to individual variant interpretation
    statistical_analyses = re.search(
        r'Statistical analyses were performed to estimate or calculate OddsPath\.',
        paper_text
    )
    if statistical_analyses:
        functional_evidence['assessment_steps'].append({
            'step_name': 'Step 4: Apply evidence to individual variant interpretation',
            'extracted_paper_info': 'Statistical analyses were performed.',
            'judgment': 'Yes',
            'reasoning': 'Statistical analyses were present.',
            'next_step_or_outcome': 'Correlate OddsPath'
        })
    else:
        functional_evidence['assessment_steps'].append({
            'step_name': 'Step 4: Apply evidence to individual variant interpretation',
            'extracted_paper_info': 'Statistical analyses were not mentioned.',
            'judgment': 'No',
            'reasoning': 'Statistical analyses were not present.',
            'next_step_or_outcome': 'No OddsPath Calculation'
        })
        
    odds