总时间（秒）：10.97
问答时间（秒）：10.81

<think>
Okay, let's tackle this query. The user wants me to extract mutation information from a given text. First, I need to read through the provided paragraphs to find any mentions of mutations. The example given uses a JSON structure, so I should follow that format.

Looking at the first paragraph, there's a mention of "mutations in ATP13A2" causing hereditary parkinsonism with dementia. Here, the gene is ATP13A2, but there's no specific cDNA or protein changes mentioned. So, I'll note the gene and mark the variants as N.D.

Next, in the paragraph about PINK1 mutations, it says "PINK1 mutations are associated with sporadic early-onset parkinsonism." Again, the gene is PINK1, but no specific variants are given. So, I'll list the gene and set variants to N.D.

Another paragraph mentions "c.248G>A (p.G83D) mutation in the TP53 gene," which is a clear example. I'll extract that into the variants array with the cDNA and protein changes.

I need to check all paragraphs for any mutation details. Some entries have gene names but no specific mutations, so their variants remain N.D. For each gene mentioned with mutations, even if the details are missing, I'll structure the JSON accordingly.

I should make sure that each gene is listed once, and the variants array includes all found mutations. If no mutations are found in a gene's context, the variants stay as N.D. The key is to be precise and only extract what's explicitly stated in the text.
</think>

```json
{
    "Gene": "ATP13A2",
    "variants": [
        {
            "cDNA Change": {
                "transcript": "N.D.",
                "ref": "N.D.",
                "alt": "N.D.",
                "position": "N.D."
            },
            "Protein Change": {
                "ref": "N.D.",
                "alt": "N.D.",
                "position": "N.D."
            },
            "Description in input context": "mutations in ATP13A2 encoding a lysosomal type 5 P-type ATPase"
        }
    ]
}
```