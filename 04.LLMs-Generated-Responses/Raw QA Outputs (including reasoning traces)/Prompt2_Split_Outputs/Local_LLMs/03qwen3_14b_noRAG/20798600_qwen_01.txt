总时间（秒）：40.45
问答时间（秒）：40.28

<think>
Okay, let's see. The user provided a paragraph from a medical literature text and wants to extract mutation information. The task is to determine if the text contains mutation details and extract them in JSON format, or return "N.D." if not.

First, I need to read the input text carefully. The paragraph starts with "Context:..." and then a long paragraph. The key part here is where mutations are mentioned. Let me scan through the text.

Looking at the first part, the paragraph talks about PINK1 mutations. Specifically, in the example given, the user provided a paragraph where mutations like Q315X and K258N are mentioned. Wait, the example might be part of the input text? Wait, no. Wait, the user's example is a sample input and output. The actual input text provided by the user in the problem is the paragraph that starts with "Context:..." and includes sentences like "PINK1 mutations (e.g., Q315X and K258N) have been associated with recessive Parkinsonism."

So, in the user's input text, the mutations are Q315X and K258N in the PINK1 gene. The task is to extract these. The user's example shows that when mutations are present, the JSON includes the gene name, variants with cDNA changes (if present), protein changes, and the description from the context.

But in the given input text, the mutations are described as "Q315X" and "K258N". These are protein changes, but the cDNA changes are not specified. The example in the user's prompt had a cDNA change (c.248G>A) and a protein change (p.G83D). However, in the current input, the text only mentions the protein changes (Q315X and K258N) without cDNA details. So, for each variant, the cDNA change would be "N.D." since it's not mentioned, and the protein change would be the given amino acid change.

Also, the description in the input context is "PINK1 mutations (e.g., Q315X and K258N) have been associated with recessive Parkinsonism."

Therefore, the JSON should list the gene as PINK1, and each variant with their respective protein changes and N.D. for cDNA. The description would include the context sentence.

Wait, but in the input text, the user's example had "Description in input context": "c.248G>A (p.G83D)". In this case, the context is "PINK1 mutations (e.g., Q315X and K258N) have been associated with recessive Parkinsonism." So, each variant's description would be "Q315X" and "K258N" respectively, but the example might require the full context. However, the instruction says to extract the description from the input context. The example shows that the description is the exact text from the input that mentions the mutation. So for each variant, the description would be "Q315X" and "K258N", but the context sentence is "PINK1 mutations (e.g., Q315X and K258N) have been associated with recessive Parkinsonism."

Wait, but the user's example had the description as "c.248G>A (p.G83D)", which is the exact mutation notation. In the current case, the input text mentions "Q315X" and "K258N" as examples of mutations. So each variant's description would be those specific notations. However, the context sentence is also part of the description. But according to the example, the description is the exact mutation notation. So for each variant, the description is "Q315X" and "K258N" respectively.

So, the JSON should have the gene as "PINK1", and the variants array with two entries. Each variant has cDNA Change with transcript, ref, alt, position as N.D., and Protein Change with ref, alt, position as the respective letters and positions. The description for each would be "Q315X" and "K258N".

Wait, but in the example, the description is "c.248G>A (p.G83D)", which is the full notation. In this case, the input text has "Q315X" and "K258N" as the mutation notations. So the description in the input context for each variant is those exact strings. The context sentence is "PINK1 mutations (e.g., Q315X and K258N) have been associated with recessive Parkinsonism." So the example in the user's prompt included the full mutation notation in the description. Therefore, in this case, each variant's description would be "Q315X" and "K258N" respectively.

So, the JSON would look like:

{
  "Gene": "PINK1",
  "variants": [
    {
      "cDNA Change": {
        "transcript": "N.D.",
        "ref": "N.D.",
        "alt": "N.D.",
        "position": "N.D."
      },
      "Protein Change": {
        "ref": "N.D.",
        "alt": "N.D.",
        "position": "315"
      },
      "Description in input context": "Q315X"
    },
    {
      "cDNA Change": {
        "transcript": "N.D.",
        "ref": "N.D.",
        "alt": "N.D.",
        "position": "N.D."
      },
      "Protein Change": {
        "ref": "N.D.",
        "alt": "N.D.",
        "position": "258"
      },
      "Description in input context": "K258N"
    }
  ]
}

Wait, but the example in the user's prompt had the protein change as "p.G83D", which is a standard notation. However, in the current input, the mutations are written as "Q315X" and "K258N". These are standard protein change notations as well. For example, Q315X would mean the glutamine at position 315 is replaced by a stop codon (X), and K258N is lysine at position 258 replaced by asparagine. So in the protein change, the ref and alt would be "Q" and "X" for the first, and "K" and "N" for the second. However, in the example provided by the user, the protein change was "p.G83D", which would correspond to ref "G" and alt "D" at position 83. But in this case, the input text uses "Q315X" and "K258N", which are the standard notations. So, perhaps the ref and alt in the protein change should be extracted accordingly.

But the user's example didn't have the ref and alt in the protein change, but instead included the full notation in the "Description in input context". Wait, looking back at the example:

In the example, the extracted JSON had:

"Protein Change": {
    "ref": "G",
    "alt": "D",
    "position": "83"
},
"Description in input context": "c.248G>A (p.G83D)"

So, the "p.G83D" is the description, and the ref and alt in the protein change are "G" and "D". Therefore, in this case, for "Q315X", the ref would be "Q", alt "X", position 315. Similarly, "K258N" would be ref "K", alt "N", position 258.

So, the JSON should reflect that. Therefore, the protein change for the first variant would have ref "Q", alt "X", position 315. The second variant would have ref "K", alt "N", position 258. The cDNA change would be N.D. for all fields since the input text doesn't mention cDNA changes.

But the user's input text only mentions the protein changes (Q315X and K258N) and not the cDNA changes. Therefore, the cDNA change fields should be "N.D.".

So, the final JSON would be as above.
</think>

{
    "Gene": "PINK1",
    "variants": [
        {
            "cDNA Change": {
                "transcript": "N.D.",
                "ref": "N.D.",
                "alt": "N.D.",
                "position": "N.D."
            },
            "Protein Change": {
                "ref": "Q",
                "alt": "X",
                "position": "315"
            },
            "Description in input context": "Q315X"
        },
        {
            "cDNA Change": {
                "transcript": "N.D.",
                "ref": "N.D.",
                "alt": "N.D.",
                "position": "N.D."
            },
            "Protein Change": {
                "ref": "K",
                "alt": "N",
                "position": "258"
            },
            "Description in input context": "K258N"
        }
    ]
}