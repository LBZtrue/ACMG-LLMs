总时间（秒）：9396.54
问答时间（秒）：51.70

```python
import json

def extract_mutations(text):
    # Define a dictionary to store extracted mutation information
    mutations = {
        "Gene": "",
        "variants": [
            {
                "cDNA Change": {
                    "transcript": "",
                    "ref": "",
                    "alt": "",
                    "position": ""
                },
                "Protein Change": {
                    "ref": "",
                    "alt": "",
                    "position": ""
                },
                "Description in input context": ""
            }
        ]
    }

    # Check if the input text contains mutation information
    if "mutation" in text.lower():
        # Extract gene name
        gene = re.search(r"(?<=gene )\w+", text).group()
        mutations["Gene"] = gene

        # Extract cDNA change, protein change, and description in input context
        for match in re.finditer(r"(c\.\d+[A-Za-z]+>\w+|\(\w+\d+\w+\))", text):
            variant = match.group()

            # Extract cDNA change
            cdna_change = re.search(r"c\.(\d+)([A-Za-z]+)>(\w+)", variant)
            if cdna_change:
                mutations["variants"][0]["cDNA Change"]["position"] = cdna_change.group(1)
                mutations["variants"][0]["cDNA Change"]["ref"] = cdna_change.group(2)
                mutations["variants"][0]["cDNA Change"]["alt"] = cdna_change.group(3)

            # Extract protein change
            prot_change = re.search(r"\((\w+)(\d+)(\w+)\)", variant)
            if prot_change:
                mutations["variants"][0]["Protein Change"]["ref"] = prot_change.group(1)
                mutations["variants"][0]["Protein Change"]["position"] = prot_change.group(2)
                mutations["variants"][0]["Protein Change"]["alt"] = prot_change.group(3)

            # Extract description in input context
            mutations["variants"][0]["Description in input context"] = variant

    else:
        # Return N.D. for fields not found
        for field in mutations["variants"][0].keys():
            mutations["variants"][0][field] = "N.D."

    return json.dumps(mutations, indent=4)

# Example usage
text = "In a study of lung cancer patients, it was found that the c.248G>A (p.G83D) mutation in the TP53 gene is associated with tumor progression."
print(extract_mutations(text))

```
The above Python code defines a function `extract_mutations` that takes a text string as input and returns a JSON object containing extracted mutation information. The function first initializes an empty dictionary `mutations` to store the extracted data. Then, it checks whether the input text contains the word "mutation," indicating potential mutation information. If so, it uses regular expressions to extract the gene name, cDNA change, protein change, and description in the input context. If no mutation information is present, the function sets all fields to "N.D." Finally, the function returns the JSON object containing the extracted mutation information. An example usage is also provided.