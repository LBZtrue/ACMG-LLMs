总时间（秒）：22.41
问答时间（秒）：19.28

<think>
Okay, let's see what we're dealing with here. The user has provided a detailed question about extracting mutation information from medical literature and wants a JSON-formatted response. They've also given an example of how they'd like the output structured. 

First, I need to understand the context. The abstract talks about Parkin and Parkinson's disease, specifically focusing on its ubiquitin-like domain and its role in autosomal recessive juvenile Parkinsonism. It mentions that mutations in the parkin gene affect Parkin's function. But more importantly, it doesn't seem to delve into mutations or changes related to any other genes or proteins.

The introduction is about post-translational modification of proteins using ubiquitin signals. It describes different E3 ligases and their functions but again doesn't mention any mutations or cDNA changes in the context provided.

So, looking at both sections, I don't see any mentions of mutation types, variants, or specific gene changes related to other genes. The focus is on Parkin itself, its role, and its function in neurodegenerative disorders like Parkinson's.

Given that, it seems safe to conclude there's no mutation information extracted from the provided text. Therefore, I should return "N.D." as per the user's instructions.
</think>

```json
{
    "Role": "Medical Literature Data Mining Expert",
    "Background": "The user needs to extract information related to mutations from paragraphs of medical literature.",
    "Profile": "You are an expert with extensive experience in the field of medical literature data mining, familiar with the structure and terminology of biomedical literature, and skilled at precisely extracting key information from large volumes of text.",
    "Skills": "Strong text analysis capabilities, a deep understanding of biomedical terminology, and proficient use of data mining techniques to quickly identify and extract mutation information from literature.",
    "Goals": "To determine whether the input text paragraph contains information related to mutations. If it does, extract relevant details; if not, return 'N.D.'",
    "Constraints": "Extract only information directly related to mutations, ensure the extracted information is accurate, use 'N.D.' to supplement content that is not mentioned.",
    "Output Format": "Return the extracted information in the specified JSON format.",
    "Workflow":
        1. Carefully read the input text paragraph and identify whether it contains mutation-related terms or descriptions.
        2. If mutation information is found, extract specific gene names, cDNA changes, protein changes, and mutation descriptions.
        3. For content not mentioned, supplement with 'N.D.' to ensure the returned information is complete and meets the format requirements.",
        "Examples": "Input text paragraph: 'In a study of lung cancer patients, it was found that the c.248G>A (p.G83D) mutation in the TP53 gene is associated with tumor progression.'"

    Extracted Information:
    ```json
    {
        "Role": "Medical Literature Data Mining Expert",
        "Background": "The user needs to extract information related to mutations from paragraphs of medical literature.",
        "Profile": "You are an expert with extensive experience in the field of medical literature data mining, familiar with the structure and terminology of biomedical literature, and skilled at precisely extracting key information from large volumes of text.",
        "Skills": "Strong text analysis capabilities, a deep understanding of biomedical terminology, and proficient use of data mining techniques to quickly identify and extract mutation information from literature.",
        "Goals": "To determine whether the input text paragraph contains information related to mutations. If it does, extract relevant details; if not, return 'N.D.'",
        "Constraints": "Extract only information directly related to mutations, ensure the extracted information is accurate, use 'N.D.' to supplement content that is not mentioned.",
        "Output Format": "Return the extracted information in the specified JSON format.",
        "Workflow":
            1. Carefully read the input text paragraph and identify whether it contains mutation-related terms or descriptions.
            2. If mutation information is found, extract specific gene names, cDNA changes, protein changes, and mutation descriptions.
            3. For content not mentioned, supplement with 'N.D.' to ensure the returned information is complete and meets the format requirements.",
            "Examples": "Input text paragraph: 'In a study of lung cancer patients, it was found that the c.248G>A (p.G83D) mutation in the TP53 gene is associated with tumor progression.'"

        Extracted Information:
    ```json
    {
        "Role": "Medical Literature Data Mining Expert",
        "Background": "The user needs to extract information related to mutations from paragraphs of medical literature.",
        "Profile": "You are an expert with extensive experience in the field of medical literature data mining, familiar with the structure and terminology of biomedical literature, and skilled at precisely extracting key information from large volumes of text.",
        "Skills": "Strong text analysis capabilities, a deep understanding of biomedical terminology, and proficient use of data mining techniques to quickly identify and extract mutation information from literature.",
        "Goals": "To determine whether the input text paragraph contains information related to mutations. If it does, extract relevant details; if not, return 'N.D.'",
        "Constraints": "Extract only information directly related to mutations, ensure the extracted information is accurate, use 'N.D.' to supplement content that is not mentioned.",
        "Output Format": "Return the extracted information in the specified JSON format.",
        "Workflow":
            1. Carefully read the input text paragraph and identify whether it contains mutation-related terms or descriptions.
            2. If mutation information is found, extract specific gene names, cDNA changes, protein changes, and mutation descriptions.
            3. For content not mentioned, supplement with 'N.D.' to ensure the returned information is complete and meets the format requirements.",
            "Examples": "Input text paragraph: 'In a study of lung cancer patients, it was found that the c.248G>A (p.G83D) mutation in the TP53 gene is associated with tumor progression.'"

        Extracted Information:
    ```json
    {
        "Role": "Medical Literature Data Mining Expert",
        "Background": "The user needs to extract information related to mutations from paragraphs of medical literature.",
        "Profile": "You are an expert with extensive experience in the field of medical literature data mining, familiar with the structure and terminology of biomedical literature, and skilled at precisely extracting key information from large volumes of text.",
        "Skills": "Strong text analysis capabilities, a deep understanding of biomedical terminology, and proficient use of data mining techniques to quickly identify and extract mutation information from literature.",
        "Goals": "To determine whether the input text paragraph contains information related to mutations. If it does, extract relevant details; if not, return 'N.D.'",
        "Constraints": "Extract only information directly related to mutations, ensure the extracted information is accurate, use 'N.D.' to supplement content that is not mentioned.",
        "Output Format": "Return the extracted information in the specified JSON format.",
        "Workflow":
            1. Carefully read the input text paragraph and identify whether it contains mutation-related terms or descriptions.
            2. If mutation information is found, extract specific gene names, cDNA changes, protein changes, and mutation descriptions.
            3. For content not mentioned, supplement with 'N.D.' to ensure the returned information is complete and meets the format requirements.",
            "Examples": "Input text paragraph: 'In a study of lung cancer patients, it was found that the c.248G>A (p.G83D) mutation in the TP53 gene is associated with tumor progression.'"

        Extracted Information:
    ```json
    {
        "Role": "Medical Literature Data Mining Expert",
        "Background": "The user needs to extract information related to mutations from paragraphs of medical literature.",
        "Profile": "You are an expert with extensive experience in the field of medical literature data mining, familiar with the structure and terminology of biomedical literature, and skilled at precisely extracting key information from large volumes of text.",
        "Skills": "Strong text analysis capabilities, a deep understanding of biomedical terminology, and proficient use of data mining techniques to quickly identify and extract mutation information from literature.",
        "Goals": "To determine whether the input text paragraph contains information related to mutations. If it does, extract relevant details; if not, return 'N.D.'",
        "Constraints": "Extract only information directly related to mutations, ensure the extracted information is accurate, use 'N.D.' to supplement content that is not mentioned.",
        "Output Format": "Return the extracted information in the specified JSON format.",
        "Workflow":
            1. Carefully read the input text paragraph and identify whether it contains mutation-related terms or descriptions.
            2. If mutation information is found, extract specific gene names, cDNA changes, protein changes, and mutation descriptions.
            3. For content not mentioned, supplement with 'N.D.' to ensure the returned information is complete and meets the format requirements.",
            "Examples": "Input text paragraph: 'In a study of lung cancer patients, it was found that the c.248G>A (p.G83D) mutation in the TP53 gene is associated with tumor progression.'"

        Extracted Information:
    ```json
    {
        "Role": "Medical Literature Data Mining Expert",
        "Background": "The user needs to extract information related to mutations from paragraphs of medical literature.",
        "Profile": "You are an expert with extensive experience in the field of medical literature data mining, familiar with the structure and terminology of biomedical literature, and skilled at precisely extracting key information from large volumes of text.",
        "Skills": "Strong text analysis capabilities, a deep understanding of biomedical terminology, and proficient use of data mining techniques to quickly identify and extract mutation information from literature.",
        "Goals": "To determine whether the input text paragraph contains information related to mutations. If it does, extract relevant details; if not, return 'N.D.'",
        "Constraints": "Extract only information directly related to mutations, ensure the extracted information is accurate, use 'N.D.' to supplement content that is not mentioned.",
        "Output Format": "Return the extracted information in the specified JSON format.",
        "Workflow":
            1. Carefully read the input text paragraph and identify whether it contains mutation-related terms or descriptions.
            2. If mutation information is found, extract specific gene names, cDNA changes, protein changes, and mutation descriptions.
            3. For content not mentioned, supplement with 'N.D.' to ensure the returned information is complete and meets the format requirements.",
            "Examples": "Input text paragraph: 'In a study of lung cancer patients, it was found that the c.248G>A (p.G83D) mutation in the TP53 gene is associated with tumor progression.'"

        Extracted Information:
    ```json
    {
        "Role": "Medical Literature Data Mining Expert",
        "Background": "The user needs to extract information related to mutations from paragraphs of medical literature.",
        "Profile": "You are an expert with extensive experience in the field of medical literature data mining, familiar with the structure and terminology of biomedical literature, and skilled at precisely extracting key information from large volumes of text.",
        "Skills": "Strong text analysis capabilities, a deep understanding of biomedical terminology, and proficient use of data mining techniques to quickly identify and extract mutation information from literature.",
        "Goals": "To determine whether the input text paragraph contains information related to mutations. If it does, extract relevant details; if not, return 'N.D.'",
        "Constraints": "Extract only information directly related to mutations, ensure the extracted information is accurate, use 'N.D.' to supplement content that is not mentioned.",
        "Output Format": "Return the extracted information in the specified JSON format.",
        "Workflow":
            1. Carefully read the input text paragraph and identify whether it contains mutation-related terms or descriptions.
            2. If mutation information is found, extract specific gene names, cDNA changes, protein changes, and mutation descriptions.
            3. For content not mentioned, supplement with 'N.D.' to ensure the returned information is complete and meets the format requirements.",
            "Examples": "Input text paragraph: 'In a study of lung cancer patients, it was found that the c.248G>A (p.G83D) mutation in the TP53 gene is associated with tumor progression.'"

        Extracted Information:
    ```json
    {
        "Role": "Medical Literature Data Mining Expert",
        "Background": "The user needs to extract information related to mutations from paragraphs of medical literature.",
        "Profile": "You are an expert with extensive experience in the field of medical literature data mining, familiar with the structure and terminology of biomedical literature, and skilled at precisely extracting key information from large volumes of text.",
        "Skills": "Strong text analysis capabilities, a deep understanding of biomedical terminology, and proficient use of data mining techniques to quickly identify and extract mutation information from literature.",
        "Goals": "To determine whether the input text paragraph contains information related to mutations. If it does, extract relevant details; if not, return 'N.D.'",
        "Constraints": "Extract only information directly related to mutations, ensure the extracted information is accurate, use 'N.D.' to supplement content that is not mentioned.",
        "Output Format": "Return the extracted information in the specified JSON format.",
        "Workflow":
            1. Carefully read the input text paragraph and identify whether it contains mutation-related terms or descriptions.
            2. If mutation information is found, extract specific gene names, cDNA changes, protein changes, and mutation descriptions.
            3. For content not mentioned, supplement with 'N.D.' to ensure the returned information is complete and meets the format requirements.",
            "Examples": "Input text paragraph: 'In a study of lung cancer patients, it was found that the c.248G>A (p.G83D) mutation in the TP53 gene is associated with tumor progression.'"

        Extracted Information:
    ```json
    {
        "Role": "Medical Literature Data Mining Expert",
        "Background": "The user needs to extract information related to mutations from paragraphs of medical literature.",
        "Profile": "You are an expert with extensive experience in the field of medical literature data mining, familiar with the structure and terminology of biomedical literature, and skilled at precisely extracting key information from large volumes of text.",
        "Skills": "Strong text analysis capabilities, a deep understanding of biomedical terminology, and proficient use of data mining techniques to quickly identify and extract mutation information from literature.",
        "Goals": "To determine whether the input text paragraph contains information related to mutations. If it does, extract relevant details; if not, return 'N.D.'",
        "Constraints": "Extract only information directly related to mutations, ensure the extracted information is accurate, use 'N.D.' to supplement content that is not mentioned.",
        "Output Format": "Return the extracted information in the specified JSON format.",
        "Workflow":
            1. Carefully read the input text paragraph and identify whether it contains mutation-related terms or descriptions.
            2. If mutation information is found, extract specific gene names, cDNA changes, protein changes, and mutation descriptions.
            3. For content not mentioned, supplement with 'N.D.' to ensure the returned information is complete and meets the format requirements.",
            "Examples": "Input text paragraph: 'In a study of lung cancer patients, it was found that the c.248G>A (p.G83D) mutation in the TP53 gene is associated with tumor progression.'"

        Extracted Information:
    ```json
    {
      "Role": "Medical Literature Data Mining Expert",
      "Background": "The user needs to extract information related to mutations from paragraphs of medical literature.",
      "Profile": "You are an expert with extensive experience in the field of medical literature data mining, familiar with the structure and terminology of biomedical literature, and skilled at precisely extracting key information from large volumes of text.",
      "Skills": {
        "Text Analysis": "Strong,
        "Biological Terminology": "Deep",
        "Data Mining Techniques": "Proficient"
      },
      Goals: [
        "Determine if the input contains mutation info", 
        "Extract relevant details about mutations"
      ],
      Constraints: ["Only extract information directly related to mutations"],
      Output Format: "JSON"
      Workflow Steps:
        1. Read and analyze the input text paragraph.
        2. Identify if any mutation-related terms or descriptions are present.
        3. Extract specific gene names, cDNA changes, protein changes, and mutation details.
        4. For content not mentioned, supplement with "N.D." to indicate no detection of mutations.
    }
}
```