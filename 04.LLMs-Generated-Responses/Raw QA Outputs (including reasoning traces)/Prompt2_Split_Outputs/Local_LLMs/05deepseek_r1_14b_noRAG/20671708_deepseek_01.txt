总时间（秒）：17.12
问答时间（秒）：16.90

<think>
Alright, so I need to figure out how to extract mutation information from a given medical literature paragraph. Let me start by reading through the example provided to understand the structure and what's expected.

The user has provided an example where the input text mentions a specific mutation in TP53 with cDNA and protein changes. The output is a JSON object containing gene name, variants with their cDNA and protein changes, and a description from the context.

Now, looking at my task: I need to apply this same logic to any given paragraph. First, I should read through each paragraph carefully to spot any mutation-related terms. Common terms might include "mutation," "cancer," "variant," or specific gene names followed by what looks like variant notations (like c.248G>A).

I also need to identify the gene involved, which could be mentioned before or after the mutation description. For each mutation found, I'll extract details such as the exact change in the DNA sequence (cDNA), the resulting protein change, and any additional context provided.

If a paragraph doesn't mention any mutations, I should return "N.D." for all relevant fields to indicate that no data was found.

Let me think about potential challenges. Some paragraphs might describe multiple mutations or use different notations. I'll need to be precise in capturing each mutation's details correctly without missing any. Also, ensuring that the JSON structure is consistent and accurate is crucial.

I should also be cautious of terms that might look like mutations but are part of normal biological processes, such as gene expression levels or enzyme activities, which aren't mutations. Proper context is key to determining if it's a mutation-related term.

In summary, my approach will involve:
1. Reading each paragraph thoroughly.
2. Identifying any mention of genes and specific variant notations indicating mutations.
3. Extracting the relevant details into the specified JSON format.
4. Using "N.D." where information isn't provided or applicable.
</think>

The user's query involves extracting mutation data from a medical literature paragraph. Here's how I would approach it:

1. **Read the Paragraph**: Start by carefully reading each paragraph to identify any mention of mutations, gene names, and variant notations.

2. **Identify Mutation Terms**: Look for terms like "mutation," "cancer," or specific genetic changes (e.g., c.248G>A). These indicators help pinpoint where mutation information is present.

3. **Extract Gene Information**: Note the gene name associated with the mutation. The gene might be mentioned before or after the mutation description, so I'll need to check both contexts.

4. **Capture Variants Details**: For each identified mutation, extract the cDNA and protein changes. This includes noting any transcript information, reference bases (ref), alternative bases (alt), their positions, and the resulting amino acid changes.

5. **Contextual Description**: Include a brief description from the paragraph that explains how the mutation is presented, such as "c.248G>A (p.G83D)" which denotes both DNA and protein alterations.

6. **Handle Non-Mutation Cases**: If no mutations are found, use "N.D." in all relevant fields to indicate missing data.

7. **Format Output**: Structure the extracted information into a JSON format, ensuring consistency and accuracy in each entry.

By following these steps, I can systematically extract mutation data or note its absence, providing clear and structured results for further analysis.